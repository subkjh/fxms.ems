<?xml version="1.0" encoding="UTF-8" ?>
<queries>

	<resultMap id="RESULT_MAP" javaClass="java.util.HashMap" />
	<resultMap id="RESULT_JAVA_MAP" javaClass="java.util.HashMap" keyCase="java" />

	<resultMap id="RESULT_FE_ENG_TRANS_CALC_DTL"
		javaClass="fxms.ems.bas.dbo.FE_ENG_TRANS_CALC_DTL">
		<result attr="setTrnsNo()" field="TRNS_NO" />
		<result attr="setTrnsVol()" field="TRNS_VOL" />
		<result attr="setInloNo()" field="INLO_NO" />
		<result attr="setSellInloNo()" field="SELL_INLO_NO" />
		<result attr="setBuyInloNo()" field="BUY_INLO_NO" />
		<result attr="setEngRtId()" field="ENG_RT_ID" />
		<result attr="setEngId()" field="ENG_ID" />
		<result attr="setSensorMoNo()" field="SENSOR_MO_NO" />
		<result attr="setStrtMeasrDtm()" field="STRT_MEASR_DTM" />
		<result attr="setStrtMeasrVal()" field="STRT_MEASR_VAL" />
		<result attr="setFnshMeasrDtm()" field="FNSH_MEASR_DTM" />
		<result attr="setFnshMeasrVal()" field="FNSH_MEASR_VAL" />
	</resultMap>


	<select id="select-calculate-amount" resultMap="RESULT_FE_ENG_TRANS_CALC_DTL">
		<![CDATA[		
		with DATAS as (
			select 	a.TRNS_NO
					, a.ENG_ID
					, a.INLO_NO
					, a.SELL_INLO_NO
					, a.BUY_INLO_NO
					, b.ENG_RT_ID
					, c.SENSOR_MO_NO
			from 	FE_ENG_TRANS_BAS 	a
					, FE_ENG_TRANS_RT	b
					, FE_ENG_RT_BAS		c
			where	a.TRNS_ST_CD 		= '1' /* 계약유지 */
			and		b.TRNS_NO			= a.TRNS_NO
			and		b.ENG_RT_USE_YN		= 'Y'
			and		c.ENG_RT_ID			= b.ENG_RT_ID		
			and		c.SENSOR_MO_NO		> 0
		)		
		select 	a.TRNS_NO
				, a.ENG_ID
				, a.INLO_NO
				, a.SELL_INLO_NO
				, a.BUY_INLO_NO
				, a.ENG_RT_ID
				, a.SENSOR_MO_NO				
				, min(MEASR_DTM)		as STRT_MEASR_DTM
				, min(CUR_INTG_VAL)		as STRT_MEASR_VAL
				, max(MEASR_DTM)		as FNSH_MEASR_DTM
				, max(CUR_INTG_VAL)		as FNSH_MEASR_VAL
				, sum(b.DIFF_VAL)		as TRNS_VOL
		from	DATAS				a
				, FE_ENG_MEASR_RAW	b
		where	a.SENSOR_MO_NO		= b.MO_NO
		and		b.MEASR_DTM			>= $measrDtmStart
		and		b.MEASR_DTM			<= $measrDtmEnd
		group by 
				a.TRNS_NO
				, a.ENG_ID
				, a.INLO_NO
				, a.SELL_INLO_NO
				, a.BUY_INLO_NO
				, a.ENG_RT_ID
				, a.SENSOR_MO_NO
		]]>
	</select>
	
	<select id="select-factory-list" resultMap="RESULT_JAVA_MAP">
		<![CDATA[	
		with datas as (
			select 	a.INLO_NO		
					, ( select	 max(T.INLO_NO)
						from 	FX_CF_INLO_MEM 	T2
								, FX_CF_INLO 	T
						where 	T2.LOWER_INLO_NO 	= a.INLO_NO
						and		T.INLO_NO 			= T2.INLO_NO
						and     T.INLO_CL_CD 		= 'COMPLEX' )
	
								as COMPLEX_INLO_NO
	
					, ( select	 max(T.INLO_NO)
						from 	FX_CF_INLO_MEM 	T2
								, FX_CF_INLO 	T
						where 	T2.LOWER_INLO_NO 	= a.INLO_NO
						and		T.INLO_NO 			= T2.INLO_NO
						and     T.INLO_CL_CD 		= 'COMPANY' )
	
								as COMPANY_INLO_NO
	
					, ( select	 max(T.INLO_NO)
						from 	FX_CF_INLO_MEM 	T2
								, FX_CF_INLO 	T
						where 	T2.LOWER_INLO_NO 	= a.INLO_NO
						and		T.INLO_NO 			= T2.INLO_NO
						and     T.INLO_CL_CD 		= 'PLANT' )
	
								as PLANT_INLO_NO
	
			from 	FX_CF_INLO a
			where   a.DEL_YN = 'N'
		)
		select	inlo.*
				, plant.INLO_TID		as PLANT_TID
				, plant.INLO_NAME		as PLANT_NAME
				, company.INLO_TID		as COMPANY_TID
				, company.INLO_NAME		as COMPANY_NAME
				, complex.INLO_TID		as COMPLEX_TID
				, complex.INLO_NAME		as COMPLEX_NAME
				, a.PLANT_INLO_NO
				, a.COMPANY_INLO_NO
				, a.COMPLEX_INLO_NO
		from 	datas a
					left join FX_CF_INLO complex 	on complex.INLO_NO = a.COMPLEX_INLO_NO
					left join FX_CF_INLO company 	on company.INLO_NO = a.COMPANY_INLO_NO
					left join FX_CF_INLO plant 		on plant.INLO_NO = a.PLANT_INLO_NO
				, FX_CF_INLO inlo
		where	a.INLO_NO			= inlo.INLO_NO
		]]>
		<test var="inloClCd"> and inlo.INLO_CL_CD = $inloClCd </test>	
	</select>
	
	<!-- 수집한 원천 데이터를 이용하여 생산, 소비의 원천 데이터를 생성한다.-->
	<insert id="make-cons-prod-raw-from-energy-raw">
		<![CDATA[
		insert into #engRawTable (
			#measrDtmName
			, INLO_NO
			, ENG_ID
			, INST_VAL
			, PREV_INTG_VAL
			, CUR_INTG_VAL
			, DIFF_VAL
			, PRES_VAL
			, TEMP_VAL
			, MEMO
			, REG_USER_NO
			, REG_DTM
			, CHG_USER_NO
			, CHG_DTM
		)
		with DATAS as (
			select 	 $measrDtm						as #measrDtmName
					, a.INLO_NO						as INLO_NO
					, a.ENG_ID						as ENG_ID
					, max(a.INST_VAL)				as INST_VAL
					, max(a.PREV_INTG_VAL)			as PREV_INTG_VAL
					, max(a.CUR_INTG_VAL)			as CUR_INTG_VAL
					, sum(a.DIFF_VAL)				as DIFF_VAL
					, avg(a.PRES_VAL)				as PRES_VAL
					, avg(a.TEMP_VAL)				as TEMP_VAL
					, 'FE_ENG_MEASR_RAW'			as MEMO
					, 1											as REG_USER_NO
					, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as REG_DTM
					, 1											as CHG_USER_NO
					, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as CHG_DTM				
			from	FE_ENG_MEASR_RAW 	a
					, FX_MO 			b
			where	a.MEASR_DTM			= $measrDtm
			and		a.MO_NO 			= b.MO_NO
			and		b.MO_USAGE_CL_CD	= $moUsageClCd
			group by 
					a.INLO_NO
					, a.ENG_ID
		)
		select	*
		from	DATAS 	a
								
		ON DUPLICATE KEY UPDATE		
				INST_VAL 		= a.INST_VAL
				, PREV_INTG_VAL	= a.PREV_INTG_VAL
				, CUR_INTG_VAL	= a.CUR_INTG_VAL
				, DIFF_VAL		= a.DIFF_VAL
				, PRES_VAL		= a.PRES_VAL
				, TEMP_VAL		= a.TEMP_VAL
				, MEMO			= a.MEMO
				, CHG_DTM		= a.CHG_DTM
		]]>
	</insert>

	<!-- 원천 테이블를 이용하여 15분 데이터를 생성한다. -->
	<insert id="insert-cons-amt-m15-from-raw">
		<![CDATA[
		insert into FE_ENG_CONS_AMT (
			CONS_DTM, DTM_TYPE, FAC_NO, ENG_ID, INLO_NO, EXP_CONS_AMT, CONS_AMT , REG_USER_NO , REG_DTM , CHG_USER_NO , CHG_DTM 
		) 
		with ROWDATAS as (
			select 	a.CONS_DTM					as CONS_DTM
					, 'M15'						as DTM_TYPE
					, -1 						as FAC_NO
					, a.ENG_ID 					as ENG_ID
					, a.INLO_NO 				as INLO_NO
					, 0							as EXP_CONS_AMT
					, truncate(a.DIFF_VAL, 2)   as CONS_AMT
					, 0							as REG_USER_NO
					, DATE_FORMAT(now(), '%Y%m%d%H%i%s')	
												as REG_DTM
					, 0							as CHG_USER_NO
					, DATE_FORMAT(now(), '%Y%m%d%H%i%s')
												as CHG_DTM			
			from 	VUP_ENG_CONS_RAW a
			where	a.CONS_DTM	= $psDate
		)
		select 	a.*
		from	ROWDATAS a 

		ON DUPLICATE KEY UPDATE
			CONS_AMT 		= a.CONS_AMT	
			, CHG_DTM		= DATE_FORMAT(now(), '%Y%m%d%H%i%s')
		]]>
	</insert>
	
	<insert id="insert-prod-amt-m15-from-raw">
		<![CDATA[
		insert into FE_ENG_PROD_AMT (
			PROD_DTM, DTM_TYPE, FAC_NO, ENG_ID, INLO_NO, EXP_PROD_AMT, PROD_AMT , REG_USER_NO , REG_DTM , CHG_USER_NO , CHG_DTM 
		) 
		with ROWDATAS as (
			select 	a.PROD_DTM					as PROD_DTM
					, 'M15'						as DTM_TYPE
					, -1 						as FAC_NO
					, a.ENG_ID 					as ENG_ID
					, a.INLO_NO 				as INLO_NO
					, 0							as EXP_PROD_AMT
					, truncate(a.DIFF_VAL, 2)   as PROD_AMT
					, 0							as REG_USER_NO
					, DATE_FORMAT(now(), '%Y%m%d%H%i%s')	
												as REG_DTM
					, 0							as CHG_USER_NO
					, DATE_FORMAT(now(), '%Y%m%d%H%i%s')
												as CHG_DTM			
			from 	FE_ENG_PROD_RAW a
			where	a.PROD_DTM	= $psDate
		)
		select 	a.*
		from	ROWDATAS a 

		ON DUPLICATE KEY UPDATE
			PROD_AMT 		= a.PROD_AMT	
			, CHG_DTM		= DATE_FORMAT(now(), '%Y%m%d%H%i%s')
		]]>
	</insert>

	<!-- 15분 에너지 소비/생산량을 이용하여 1시간 내역을 생성한다. -->

	<insert id="make-prod-h1-from-m15" resultMap="RESULT_MAP">
		<![CDATA[
		insert into FE_ENG_PROD_AMT (
				PROD_DTM
				, DTM_TYPE
				, FAC_NO
				, ENG_ID
				, INLO_NO
				, EXP_PROD_AMT
				, PROD_AMT
				, REG_USER_NO
				, REG_DTM
				, CHG_USER_NO
				, CHG_DTM
		)
		with 
		ROWDATAS as (
			select	concat($dateHh, '0000')	as PROD_DTM
					, a.FAC_NO				as FAC_NO 		/* 설비번호 */
					, a.ENG_ID				as ENG_ID 		/* 에너지ID */
					, a.INLO_NO				as INLO_NO 		/* 설치위치번호 */
					, truncate(sum(a.EXP_PROD_AMT), 1)	
											as EXP_PROD_AMT 		/* 예상생산량 */
					, truncate(sum(a.PROD_AMT), 1)
											as PROD_AMT 		/* 생산량 */
			from 	FE_ENG_PROD_AMT a 		/* 에너지생산량테이블 */
			where	a.PROD_DTM 	>= concat($dateHh, '0000')
			and		a.PROD_DTM 	<= concat($dateHh, '5959')
			and		a.DTM_TYPE	= 'M15'
			group by  
				a.FAC_NO
				, a.ENG_ID
				, a.INLO_NO	
		)
		select
				  a.PROD_DTM
				, 'H1'				as DTM_TYPE
				, a.FAC_NO
				, a.ENG_ID
				, a.INLO_NO
				, a.EXP_PROD_AMT
				, a.PROD_AMT
				, 1											as REG_USER_NO
				, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as REG_DTM
				, 1											as CHG_USER_NO
				, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as CHG_DTM
		from	ROWDATAS	a
		
		ON DUPLICATE KEY UPDATE		
				EXP_PROD_AMT 	= a.EXP_PROD_AMT
				, PROD_AMT		= a.PROD_AMT
				, CHG_DTM			= DATE_FORMAT(now(), '%Y%m%d%H%i%s')	

		]]>
	</insert>
	<insert id="make-cons-h1-from-m15" resultMap="RESULT_MAP">
		<![CDATA[
		insert into FE_ENG_CONS_AMT (
			CONS_DTM
			, DTM_TYPE
			, FAC_NO
			, ENG_ID
			, INLO_NO
			, EXP_CONS_AMT
			, CONS_AMT
			, REG_USER_NO
			, REG_DTM
			, CHG_USER_NO
			, CHG_DTM
		)
		with 
			ROWDATAS as (
				select	concat($dateHh, '0000')		as CONS_DTM
						, a.FAC_NO				as FAC_NO 		/* 설비번호 */
						, a.ENG_ID				as ENG_ID 		/* 에너지ID */
						, a.INLO_NO				as INLO_NO 		/* 설치위치번호 */
						, truncate(sum(a.EXP_CONS_AMT), 1)
												as EXP_CONS_AMT 		/* 예상생산량 */
						, truncate(sum(a.CONS_AMT), 1)
												as CONS_AMT 		/* 생산량 */
				from 	FE_ENG_CONS_AMT a 		/* 에너지생산량테이블 */
				where	a.CONS_DTM >= concat($dateHh, '0000')
				and		a.CONS_DTM <= concat($dateHh, '5959')
				and		a.DTM_TYPE	= 'M15'
				group by  
					a.FAC_NO
					, a.ENG_ID
					, a.INLO_NO	
			)
			select
					  a.CONS_DTM		as CONS_DTM
					, 'H1'				as DTM_TYPE
					, a.FAC_NO
					, a.ENG_ID
					, a.INLO_NO
					, a.EXP_CONS_AMT
					, a.CONS_AMT
					, 1											as REG_USER_NO
					, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as REG_DTM
					, 1											as CHG_USER_NO
					, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as CHG_DTM
			from	ROWDATAS	a
			
			ON DUPLICATE KEY UPDATE		
					EXP_CONS_AMT 	= a.EXP_CONS_AMT
					, CONS_AMT		= a.CONS_AMT
					, CHG_DTM		= DATE_FORMAT(now(), '%Y%m%d%H%i%s')
		]]>
	</insert>


	<!-- 1시간 에너지 소비/생산량을 이용하여 1일 내역을 생성한다. -->


	<insert id="make-prod-stat-from-h1" resultMap="RESULT_MAP">
		<![CDATA[
		insert into FE_ENG_PROD_STAT (
			PROD_DATE
			, FAC_NO
			, ENG_ID
			, INLO_NO
			, EXP_PROD_AMT
			, PROD_AMT
			, REG_USER_NO
			, REG_DTM
			, CHG_USER_NO
			, CHG_DTM
		)
		with 
		ROWDATAS as (
			select	a.FAC_NO				as FAC_NO 		/* 설비번호 */
					, a.ENG_ID				as ENG_ID 		/* 에너지ID */
					, a.INLO_NO				as INLO_NO 		/* 설치위치번호 */
					, truncate(sum(a.EXP_PROD_AMT), 1)	
											as EXP_PROD_AMT 		/* 예상생산량 */
					, truncate(sum(a.PROD_AMT), 1)
											as PROD_AMT 		/* 생산량 */
			from 	FE_ENG_PROD_AMT a 		/* 에너지생산량테이블 */
			where	a.PROD_DTM 	>= concat($date, '000000')
			and		a.PROD_DTM 	<= concat($date, '235959')
			and		a.DTM_TYPE	= 'H1'
			group by  
				a.FAC_NO
				, a.ENG_ID
				, a.INLO_NO	
		)
		select
				$date			as PROD_DATE
				, a.FAC_NO
				, a.ENG_ID
				, a.INLO_NO
				, a.EXP_PROD_AMT
				, a.PROD_AMT
				, 1											as REG_USER_NO
				, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as REG_DTM
				, 1											as CHG_USER_NO
				, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as CHG_DTM
		from	ROWDATAS	a
		
		ON DUPLICATE KEY UPDATE		
				EXP_PROD_AMT 	= a.EXP_PROD_AMT
				, PROD_AMT		= a.PROD_AMT
				, CHG_DTM			= DATE_FORMAT(now(), '%Y%m%d%H%i%s')
		]]>
	</insert>
	<insert id="make-cons-stat-from-h1" resultMap="RESULT_MAP">
		<![CDATA[
		insert into FE_ENG_CONS_STAT (
			CONS_DATE
			, FAC_NO
			, ENG_ID
			, INLO_NO
			, EXP_CONS_AMT
			, CONS_AMT
			, REG_USER_NO
			, REG_DTM
			, CHG_USER_NO
			, CHG_DTM
		)
		with 
		ROWDATAS as (
			select	a.FAC_NO				as FAC_NO 		/* 설비번호 */
					, a.ENG_ID				as ENG_ID 		/* 에너지ID */
					, a.INLO_NO				as INLO_NO 		/* 설치위치번호 */
					, truncate(sum(a.EXP_CONS_AMT), 1)
											as EXP_CONS_AMT 		/* 예상생산량 */
					, truncate(SUM(a.CONS_AMT), 1)
											as CONS_AMT 		/* 생산량 */
			from 	FE_ENG_CONS_AMT a 		/* 에너지생산량테이블 */
			where	a.CONS_DTM >= concat($date, '000000')
			and		a.CONS_DTM <= concat($date, '235959')
			and		a.DTM_TYPE	= 'H1'
			group by  
				a.FAC_NO
				, a.ENG_ID
				, a.INLO_NO	
		)
		select
				$date				as CONS_DATE
				, a.FAC_NO
				, a.ENG_ID
				, a.INLO_NO
				, a.EXP_CONS_AMT
				, a.CONS_AMT
				, 1											as REG_USER_NO
				, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as REG_DTM
				, 1											as CHG_USER_NO
				, DATE_FORMAT(now(), '%Y%m%d%H%i%s')		as CHG_DTM
		from	ROWDATAS	a
		
		ON DUPLICATE KEY UPDATE		
				EXP_CONS_AMT 	= a.EXP_CONS_AMT
				, CONS_AMT		= a.CONS_AMT
				, CHG_DTM		= DATE_FORMAT(now(), '%Y%m%d%H%i%s')
		]]>
	</insert>	

</queries>

